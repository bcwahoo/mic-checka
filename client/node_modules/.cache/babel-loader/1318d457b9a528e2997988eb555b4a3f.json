{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\BCWAHOO\\\\WorkSpace\\\\BootCamp\\\\Session\\\\wk21 - React\\\\readinglist-with-jwt-auth\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\BCWAHOO\\\\WorkSpace\\\\BootCamp\\\\Session\\\\wk21 - React\\\\readinglist-with-jwt-auth\\\\client\\\\src\\\\pages\\\\Signup\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { onLogin } from '../../redux/actions';\nimport API from '../../api';\nimport { ServerError } from '../../components/Form';\nvar schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().required().email(),\n  username: yup.string().required().min(3),\n  password: yup.string().required().min(8)\n});\n/**\n * \n * @param {*} props \n * \n * autocomplete names\n * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-autocomplete-given-name\n */\n\nvar Signup = function Signup(props) {\n  return React.createElement(Modal, {\n    show: true,\n    onHide: function onHide() {\n      return props.history.push('/');\n    },\n    animation: false,\n    size: \"lg\",\n    \"aria-labelledby\": \"signup-form\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"signup-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Reading List Signup\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Signup to create your reading list\"), React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      username: '',\n      password: ''\n    },\n    validationSchema: schema,\n    onSubmit: function _callee(values, formikBag) {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.signup(values));\n\n            case 3:\n              data = _context.sent;\n\n              if (data.success) {\n                props.onLogin(data.tokens);\n              } else {\n                formikBag.setErrors(data.errors);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              formikBag.setStatus(_context.t0);\n\n            case 10:\n              return _context.abrupt(\"return\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, function (_ref) {\n    var status = _ref.status,\n        values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting;\n    return React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ServerError, {\n      axiosError: status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"signupFirstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"given-name\",\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First name\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.firstName,\n      isInvalid: !!errors.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, errors.firstName && touched.firstName && errors.firstName))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"signupLastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"family-name\",\n      name: \"lastName\",\n      type: \"text\",\n      placeholder: \"Last name\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.lastName,\n      isInvalid: !!errors.lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, errors.lastName && touched.lastName && errors.lastName))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"signupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"email\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email address\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      isInvalid: !!errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, errors.email && touched.email && errors.email))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      required: true,\n      name: \"username\",\n      autoComplete: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.username,\n      isInvalid: !!errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, errors.username && touched.username && errors.username))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"new-password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      isInvalid: !!errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, errors.password && touched.password && errors.password))), React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Submit\"));\n  }), React.createElement(Link, {\n    className: \"link\",\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(\"span\", {\n    className: \"link-signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Login\"))));\n};\n\nexport default connect( // mapStateToProps\nnull, // mapDispatchToProps\n{\n  onLogin: onLogin\n})(Signup);","map":{"version":3,"sources":["C:/Users/BCWAHOO/WorkSpace/BootCamp/Session/wk21 - React/readinglist-with-jwt-auth/client/src/pages/Signup/index.jsx"],"names":["React","connect","Button","Col","Form","Modal","Link","Formik","yup","onLogin","API","ServerError","schema","object","firstName","string","required","lastName","email","username","min","password","Signup","props","history","push","values","formikBag","signup","data","success","tokens","setErrors","errors","setStatus","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport {ServerError} from '../../components/Form';\n\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required().email(),\n    username: yup.string().required().min(3),\n    password: yup.string().required().min(8)\n});\n\n/**\n * \n * @param {*} props \n * \n * autocomplete names\n * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-autocomplete-given-name\n */\nconst Signup = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"signup-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"signup-form\">\n                Reading List Signup\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Signup to create your reading list</h5>\n            <Formik\n                initialValues={{ firstName: '', lastName: '', email: '', username:'', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.signup(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                                                        <ServerError axiosError={status} />\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupFirstName\">\n                                    <Form.Label>First name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='given-name'\n                                        name='firstName'\n                                        type=\"text\"\n                                        placeholder=\"First name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.firstName}\n                                        isInvalid={!!errors.firstName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.firstName && touched.firstName && errors.firstName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupLastName\">\n                                    <Form.Label>Last name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        type=\"text\"\n                                        placeholder=\"Last name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.lastName}\n                                        isInvalid={!!errors.lastName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.lastName && touched.lastName && errors.lastName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupEmail\">\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='email'\n                                        name='email'\n                                        type=\"email\"\n                                        placeholder=\"Email address\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                        isInvalid={!!errors.email}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.email && touched.email && errors.email}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='new-password'\n                                        name='password'\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/login\">Already have an account? <span className=\"link-signup\">Login</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Signup);"]},"metadata":{},"sourceType":"module"}