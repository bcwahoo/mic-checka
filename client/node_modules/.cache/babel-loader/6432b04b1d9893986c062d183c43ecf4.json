{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\BCWAHOO\\\\WorkSpace\\\\BootCamp\\\\Session\\\\wk21 - React\\\\readinglist-with-jwt-auth\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\BCWAHOO\\\\WorkSpace\\\\BootCamp\\\\Session\\\\wk21 - React\\\\readinglist-with-jwt-auth\\\\client\\\\src\\\\pages\\\\Login\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { onLogin } from '../../redux/actions';\nimport API from '../../api';\nimport { ServerError } from '../../components/Form';\nvar schema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\n\nvar Login = function Login(props) {\n  return React.createElement(Modal, {\n    show: true,\n    onHide: function onHide() {\n      return props.history.push('/');\n    },\n    animation: false,\n    size: \"lg\",\n    \"aria-labelledby\": \"login-form\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Reading List Login\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Login to your reading list\"), React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: schema,\n    onSubmit: function _callee(values, formikBag) {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.login(values));\n\n            case 3:\n              data = _context.sent;\n\n              if (data.success) {\n                props.onLogin(data.tokens);\n              } else {\n                formikBag.setErrors(data.errors);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              formikBag.setStatus(_context.t0);\n\n            case 10:\n              return _context.abrupt(\"return\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, function (_ref) {\n    var status = _ref.status,\n        values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting;\n    return React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ServerError, {\n      axiosError: status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      required: true,\n      name: \"username\",\n      autoComplete: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.username,\n      isInvalid: !!errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, errors.username && touched.username && errors.username))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      autoComplete: \"current-password\",\n      required: true,\n      name: \"password\",\n      type: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      isInvalid: !!errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, errors.password && touched.password && errors.password))), React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Submit\"));\n  }), React.createElement(Link, {\n    className: \"link\",\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(\"span\", {\n    className: \"link-signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Signup\"))));\n};\n\nexport default connect( // mapStateToProps\nnull, // mapDispatchToProps\n{\n  onLogin: onLogin\n})(Login);","map":{"version":3,"sources":["C:/Users/BCWAHOO/WorkSpace/BootCamp/Session/wk21 - React/readinglist-with-jwt-auth/client/src/pages/Login/index.jsx"],"names":["React","connect","Button","Col","Form","Modal","Link","Formik","yup","onLogin","API","ServerError","schema","object","username","string","required","password","Login","props","history","push","values","formikBag","login","data","success","tokens","setErrors","errors","setStatus","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport { ServerError } from '../../components/Form';\n\nconst schema = yup.object({\n    username: yup.string().required(),\n    password: yup.string().required()\n});\n\nconst Login = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"login-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"login-form\">\n                Reading List Login\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Login to your reading list</h5>\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.login(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <ServerError axiosError={status} />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        autoComplete='current-password'\n                                        required\n                                        name='password'\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/signup\">Don't have an account? <span className=\"link-signup\">Signup</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Login);\n\n"]},"metadata":{},"sourceType":"module"}