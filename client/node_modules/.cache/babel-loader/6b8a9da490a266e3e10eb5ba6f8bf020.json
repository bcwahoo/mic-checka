{"ast":null,"code":"/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n * Here we are combinging two reducers into a single root reducer,\n * and also creating a rootState, which will be the initial state passed to the store.\n */\nimport { combineReducers } from \"redux\"; // @see {@link https://redux.js.org/api/combinereducers/}\n\nimport user, { initialState as userState } from \"./user\";\n/**\n * Create correctly setup initial state for root reducer\n */\n\nexport var rootState = {\n  user: userState\n};\n/**\n * Merging our separate reducers into one root reducer\n */\n\nexport default combineReducers({\n  user: user\n});","map":{"version":3,"sources":["C:/Users/BCWAHOO/WorkSpace/BootCamp/Session/wk21 - React/readinglist-with-jwt-auth/client/src/redux/reducers/index.js"],"names":["combineReducers","user","initialState","userState","rootState"],"mappings":"AAAA;;;;;;;;AAUA,SAASA,eAAT,QAAgC,OAAhC,C,CAA2C;;AAC3C,OAAOC,IAAP,IAAeC,YAAY,IAAIC,SAA/B,QAAgD,QAAhD;AAGA;;;;AAGA,OAAO,IAAMC,SAAS,GAAG;AACrBH,EAAAA,IAAI,EAAEE;AADe,CAAlB;AAIP;;;;AAGA,eAAeH,eAAe,CAAC;AAC3BC,EAAAA,IAAI,EAAJA;AAD2B,CAAD,CAA9B","sourcesContent":["/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n * Here we are combinging two reducers into a single root reducer,\n * and also creating a rootState, which will be the initial state passed to the store.\n */\n\n\nimport { combineReducers } from \"redux\";   // @see {@link https://redux.js.org/api/combinereducers/}\nimport user, { initialState as userState } from \"./user\";\n\n\n/**\n * Create correctly setup initial state for root reducer\n */\nexport const rootState = {\n    user: userState\n};\n\n/**\n * Merging our separate reducers into one root reducer\n */\nexport default combineReducers({\n    user\n});"]},"metadata":{},"sourceType":"module"}