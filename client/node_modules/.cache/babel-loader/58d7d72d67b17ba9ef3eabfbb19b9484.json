{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BCWAHOO\\\\WorkSpace\\\\BootCamp\\\\Session\\\\wk21 - React\\\\readinglist-with-jwt-auth\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n/**\n * Wrapping our entire app in the react-redux Provider component\n * \n * The <Provider /> makes the Redux store available to any nested components that have been wrapped in the connect() function.\n * Since any React component in a React Redux app can be connected,\n * most applications will render a <Provider> at the top level,\n * with the entire app’s component tree inside of it.\n * Normally, you can’t use a connected component unless it is nested inside of a <Provider>.\n * \n * @see {@link https://react-redux.js.org/api/provider}\n */\n\nvar renderApp = function renderApp() {\n  return render(React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), document.getElementById(\"root\"));\n};\n/**\n * Setting up hot module reloading for our components\n */\n\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./App', renderApp);\n}\n\nrenderApp(); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/BCWAHOO/WorkSpace/BootCamp/Session/wk21 - React/readinglist-with-jwt-auth/client/src/index.js"],"names":["React","render","Provider","store","App","serviceWorker","renderApp","document","getElementById","process","env","NODE_ENV","module","hot","accept","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA;;;;;;;;;;;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAML,MAAM,CAC1B,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAD0B,EAI1BI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJ0B,CAAZ;AAAA,CAAlB;AAOA;;;;;AAGA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,MAAM,CAACC,GAApD,EAAyD;AACrDD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,OAAlB,EAA2BR,SAA3B;AACH;;AACDA,SAAS,G,CAET;AACA;AACA;;AACAD,aAAa,CAACU,UAAd","sourcesContent":["import React from 'react';\nimport {render} from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * Wrapping our entire app in the react-redux Provider component\n * \n * The <Provider /> makes the Redux store available to any nested components that have been wrapped in the connect() function.\n * Since any React component in a React Redux app can be connected,\n * most applications will render a <Provider> at the top level,\n * with the entire app’s component tree inside of it.\n * Normally, you can’t use a connected component unless it is nested inside of a <Provider>.\n * \n * @see {@link https://react-redux.js.org/api/provider}\n */\nconst renderApp = () => render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n/**\n * Setting up hot module reloading for our components\n */\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./App', renderApp)\n}\nrenderApp()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}